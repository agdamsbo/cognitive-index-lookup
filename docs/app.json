[{"name":"server.R","content":"server <- function(input, output, session) {\n  require(dplyr)\n  require(ggplot2)\n  require(tidyr)\n  source(\"https://raw.githubusercontent.com/agdamsbo/ENIGMAtrial_R/main/src/plot_index.R\")\n  source(\"https://raw.githubusercontent.com/agdamsbo/ENIGMAtrial_R/main/src/index_from_raw.R\")\n\n  dat<-reactive({\n    \n    df<-data.frame(record_id=\"1\",\n                   ab=input$version,\n                   age=input$age,\n                   imm=input$rs1,\n                   vis=input$rs2,\n                   ver=input$rs3,\n                   att=input$rs4,\n                   del=input$rs5,\n                   stringsAsFactors = FALSE)\n    return(df)\n  })\n\n  dat_u<-reactive({\n  # input$file1 will be NULL initially. After the user selects\n  # and uploads a file, head of that data file by default,\n  # or all rows if selected, will be shown.\n  \n  \n  req(input$file1)\n  \n  df <- read.csv(input$file1$datapath,\n                 header = input$header,\n                 sep = input$sep,\n                 quote = input$quote)\n  \n  return(df)\n  })\n  \n  dat_f<-reactive({\n    \n    if (input$type==1){\n      return(dat())}\n    if (input$type==2){\n      return(head(dat_u(),10))}\n  })\n  \n  index_p <- reactive({ df<-index_from_raw(ds=dat_f(),\n                                          indx=read.csv(\"https://raw.githubusercontent.com/agdamsbo/ENIGMAtrial_R/main/data/index.csv\"),\n                                          version = dat_f()$ab,\n                                          age = dat_f()$age,\n                                          raw_columns=c(\"imm\",\"vis\",\"ver\",\"att\",\"del\")) \n    \n    colnames(df)<-c(\"id\",\n                    \"a_is\",\n                    \"b_is\",\n                    \"c_is\",\n                    \"d_is\",\n                    \"e_is\",\n                    \"i_is\",\n                    \"a_ci\",\n                    \"b_ci\",\n                    \"c_ci\",\n                    \"d_ci\",\n                    \"e_ci\",\n                    \"i_ci\",\n                    \"a_per\",\n                    \"b_per\",\n                    \"c_per\",\n                    \"d_per\",\n                    \"e_per\",\n                    \"i_per\")\n    return(df)\n    })\n\n  \n  output$ndx.tbl <- renderTable({ \n    index_p()|>\n      select(\"id\",contains(\"_is\"))\n    })\n  \n  output$per.tbl <- renderTable({\n    index_p()|>\n      select(\"id\",contains(\"_per\"))\n  })\n  \n  \n  output$ndx.plt<-renderPlot({\n\n    plot_index(index_p(),sub_plot = \"_is\")\n  })\n\n  output$per.plt<-renderPlot({\n    plot_index(index_p(),sub_plot = \"_per\")\n  })\n  \n  # Downloadable csv of selected dataset ----\n  output$downloadData <- downloadHandler(\n    filename = \"index_lookup.csv\",\n    \n    content = function(file) {\n      write.csv(index_p(), file, row.names = FALSE)\n    }\n  )\n  \n}\n","type":"text"},{"name":"ui.R","content":"library(shiny)\nlibrary(ggplot2)\n\nui <- fluidPage(\n  \n  ## -----------------------------------------------------------------------------\n  ## Application title\n  ## ----------------------------------------------------------------------------- \n\n  titlePanel(\"Calculating cognitive index scores in multidimensional testing.\",\n             windowTitle = \"Cognitive test index calculator\"),\n  h5(\"Please note this calculator is only meant as a proof of concept for educational purposes, \n     and the author will take no responsibility for the results of the calculator. \n     Uploaded data is not kept, but please, do not upload any sensitive data.\"),\n  \n  ## -----------------------------------------------------------------------------\n  ## Side panel\n  ## ----------------------------------------------------------------------------- \n  \n  sidebarPanel(\n      h4(\"Test resultsData format\"),\n      \n      radioButtons(inputId = \"type\",\n                   label = \"Data type\",\n                   inline = FALSE,\n                   choiceNames=c(\"Single entry\",\n                                 \"File upload (10 records)\"),\n                   choiceValues=c(1,2)),\n      \n      # Horizontal line ----\n      tags$hr(),\n      \n      ## -----------------------------------------------------------------------------\n      ## Single entry\n      ## -----------------------------------------------------------------------------      \n      \n      conditionalPanel(condition = \"input.type==1\",\n      numericInput(inputId = \"age\",\n                   label = \"Age\",\n                   value=60),\n      \n      radioButtons(inputId = \"version\",\n                   label = \"Test version (A/B)\",\n                   inline = FALSE,\n                   choiceNames=c(\"A\",\n                                 \"B\"),\n                   choiceValues=c(1,2)),\n      \n      numericInput(inputId = \"rs1\",\n                   label = \"Immediate memory\",\n                   value=35),\n      numericInput(inputId = \"rs2\",\n                   label = \"Visuospatial functions\",\n                   value=35),\n      numericInput(inputId = \"rs3\",\n                   label = \"Verbal functions\",\n                   value=30),\n      numericInput(inputId = \"rs4\",\n                   label = \"Attention\",\n                   value=35),\n      numericInput(inputId = \"rs5\",\n                   label = \"Delayed memory\",\n                   value=40)\n      ),\n      \n      ## -----------------------------------------------------------------------------\n      ## File upload\n      ## ----------------------------------------------------------------------------- \n      \n      conditionalPanel(condition = \"input.type==2\",\n      \n                       # Input: Select a file ----\n                       \n                       fileInput(\"file1\", \"Choose CSV File\",\n                                 multiple = FALSE,\n                                 accept = c(\"text/csv\",\n                                            \"text/comma-separated-values,text/plain\",\n                                            \".csv\")),\n                       h6(\"Columns: record_id, ab, age, imm, vis, ver, att, del.\"),\n                       \n                       # Horizontal line ----\n                       tags$hr(),\n                       \n                       # Input: Checkbox if file has header ----\n                       checkboxInput(\"header\", \"Header\", TRUE),\n                       \n                       # Input: Select separator ----\n                       radioButtons(\"sep\", \"Separator\",\n                                    choices = c(Comma = \",\",\n                                                Semicolon = \";\",\n                                                Tab = \"\\t\"),\n                                    selected = \",\"),\n                       \n                       # Input: Select quotes ----\n                       radioButtons(\"quote\", \"Quote\",\n                                    choices = c(None = \"\",\n                                                \"Double Quote\" = '\"',\n                                                \"Single Quote\" = \"'\"),\n                                    selected = '\"'),\n                       \n      ),                 \n      \n      \n      ## -----------------------------------------------------------------------------\n      ## Download output\n      ## ----------------------------------------------------------------------------- \n      \n      # Horizontal line ----\n      tags$hr(),\n      \n      h4(\"Download results\"),\n      \n      # Button\n      downloadButton(\"downloadData\", \"Download\")\n      \n      \n      ),\n    \n    mainPanel(\n      tabsetPanel(\n        \n        ## -----------------------------------------------------------------------------\n        ## Summary tab\n        ## ----------------------------------------------------------------------------- \n        \n        tabPanel(\"Summary\",\n                 h3(\"Index Scores\"),\n\n                 htmlOutput(\"ndx.tbl\", container = span),\n                 \n                 h3(\"Percentiles\"),\n                 \n                 htmlOutput(\"per.tbl\", container = span)\n    ),\n    \n    ## -----------------------------------------------------------------------------\n    ## Plots tab\n    ## ----------------------------------------------------------------------------- \n    \n    tabPanel(\"Plots\",\n             h3(\"Index Scores\"),\n\n             plotOutput(\"ndx.plt\"),\n\n             h3(\"Percentiles\"),\n\n             plotOutput(\"per.plt\")\n    )\n    \n    )\n    )\n)\n","type":"text"},{"name":"sample data.R","content":"# Samlpe data from data base\n\nsource(\"https://raw.githubusercontent.com/agdamsbo/ENIGMAtrial_R/main/src/redcap_api_export_short.R\")\n\ndf<-redcap_api_export_short(id= c(40:45),\n                            instruments= \"rbans\",\n                            event= \"3_months_arm_1\") %>%\n  select(c(\"record_id\",ends_with(c(\"_version\",\"_age\",\"_rs\")))) %>%\n  na.omit()|>\n  rbind(redcap_api_export_short(id= c(10:15),\n                                instruments= \"rbans\",\n                                event= \"12_months_arm_1\") %>%\n          select(c(\"record_id\",ends_with(c(\"_version\",\"_age\",\"_rs\")))) %>%\n          na.omit())\n\ncolnames(df)<-c(\"record_id\",\"ab\",\"age\",\"imm\",\"vis\",\"ver\",\"att\",\"del\")\n\n## New index numbers\ndf$record_id<-1:nrow(df)\n\n## Age is changed for obscurity\ndf$age<-sample(-2:2,nrow(df),TRUE)+df$age\n\nwrite.csv(df, \"sample.csv\", row.names = FALSE)\n","type":"text"},{"name":"trouble shooting.R","content":"df<-data.frame(record_id=\"1\",\n           imm=35,\n           vis=35,\n           ver=35,\n           att=35,\n           del=35,\n           stringsAsFactors = FALSE)\n\nsource(\"https://raw.githubusercontent.com/agdamsbo/ENIGMAtrial_R/main/src/index_from_raw.R\")\n\ndf_c<-index_from_raw(ds=df,\n               indx=read.csv(\"https://raw.githubusercontent.com/agdamsbo/ENIGMAtrial_R/main/data/index.csv\"),\n               version = \"1\",\n               age = 60,\n               raw_columns=c(\"imm\",\"vis\",\"ver\",\"att\",\"del\"),\n               mani=TRUE)\n\nplot_index(ds=df_c,id=\"id\",sub_plot = \"_is\")\n","type":"text"}]
